---

- name: import variables for {{ ansible_distribution_file_variety | lower }}
  include_vars: "{{ ansible_distribution_file_variety | lower }}.yml"

- name: create group
  group:
    name: grafana
    state: present
    system: yes

- name: create user
  user:
    comment: grafana
    name: grafana
    group: grafana
    home: '{{ grafana.user.directory }}'
    create_home: yes
    system: yes
    password_lock: yes

- file:
    path: '{{ grafana.user.directory }}/{{ item }}'
    state: directory
    owner: grafana
    group: grafana
    mode: 0750
  with_items:
    - data
    - logs
    - ssl

- name: download grafana
  get_url:
    url: '{{ grafana.url }}'
    dest: /tmp/grafana.tar.gz
    checksum: sha256:{{ grafana.checksum }}
  become: yes
  become_method: su
  become_user: grafana

- unarchive:
    src: /tmp/grafana.tar.gz
    dest: /tmp
    remote_src: yes

- copy:
    src: /tmp/{{ grafana.filename }}/{{ item }}
    dest: '{{ grafana.user.directory }}'
    remote_src: yes
    owner: grafana
    group: grafana
    mode: 0755
  become: yes
  become_method: su
  become_user: grafana
  with_items:
    - bin
    - conf
    - public
    - scripts
    - tools

- name: make grafana executable
  file:
    path: /srv/grafana/bin/{{ item }}
    state: file
    owner: grafana
    group: grafana
    mode: 0755
  become: yes
  become_method: su
  become_user: grafana
  with_items:
    - grafana-server
    - grafana-cli

- name: copy config
  template:
    src: grafana.ini.j2
    dest: '{{ grafana.user.directory }}/conf/grafana.ini'
    owner: grafana
    group: grafana
    mode: 0640
  notify: restart grafana

- name: generate ssl certificate
  block:
    - openssl_privatekey:
        path: private/certificates/grafana.key
    - openssl_csr:
        path: private/certificates/grafana.csr
        privatekey_path: private/certificates/grafana.key
        common_name: '{{ grafana.openssl.common_name }}.{{ datacenter.name }}.{{ datacenter.domain }}'
    - openssl_certificate:
        path: private/certificates/grafana.crt
        privatekey_path: private/certificates/grafana.key
        csr_path: private/certificates/grafana.csr
        ownca_path: private/certificates/rootca.crt
        ownca_privatekey_path: private/certificates/rootca.key
        ownca_privatekey_passphrase: "{{ lookup('file', 'private/certificates/rootca.pw') }}"
        provider: ownca
  delegate_to: localhost
  no_log: yes

- copy:
    src: '{{ item.src }}'
    dest: '{{ grafana.user.directory }}/ssl/{{ item.dest }}'
    owner: grafana
    group: grafana
    mode: 0600
  with_items:
    - src: 'private/certificates/grafana.crt'
      dest: 'cert.pem'
    - src: 'private/certificates/grafana.key'
      dest: 'key.pem'
  notify: restart grafana


- name: add supervisor configuration
  template:
    src: supervisor.conf.j2
    dest: "{{ supervisor.config_directory }}/grafana.conf"
    owner: root
    group: root
    mode: 0644
  notify: restart grafana

- name: add grafana
  supervisorctl:
    config: "{{ supervisor.config_directory }}/grafana.conf"
    name: grafana
    state: present
